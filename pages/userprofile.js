import React, { useRef, useState, useEffect } from 'react';
import useAuth from '../hooks/useAuth'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/userprofile.module.css'
import {listObj} from '../lib/s3client'

function userprofile({avtrs, host}) {

  const dp_ref = useRef()

  const [file, setfile] = useState("/empty_face.svg");

  // useEffect(() => {
  //   var formData = new FormData(document.getElementById("user_form"));
  //   var content = '<a id="a"><b id="b">hey!</b></a>'; // the body of the new file...
  //   var blob = new Blob([content], { type: "text/xml"});
  //   formData.append("avatar", blob);
  // }, []);
  

  const capture_file = (e) => {
    const in_file = e.target.files[0]
    if(in_file){
      const reader = new FileReader();
      reader.addEventListener("load", function() {
        setfile(this.result)
      })
      reader.readAsDataURL(in_file)
    } 
  }


  const setImage = (e) => {
    console.log(".....................", e.target.src)
    setfile(e.target.src)
  }
 
    const avtr_boxes = avtrs.map((image_names, index )=> {
      const img_src = host+`api/getBlob/a/`+image_names.key
      return(
        <div key={index} className={styles.avtr_box} onClick={setImage}>
                  <Image src={img_src} className={styles.pic} layout="fill"></Image>
        </div>
      )
    })
  

  const ele = (
    <div className={styles.main_div}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/peerllogo.svg" />
        <title>PEERL</title>
      </Head>
      <nav className={styles.nav_bar}>
        <div className={styles.logo_wrapper}>
          <Image src="/PeerlLogo2.svg" alt="PEERL Logo" layout='fill' quality="100" />
        </div>

      </nav>
      <div className={styles.body_wrapper}>
        <div className={styles.content_wrapper}>
          <h1 className={styles.context_heading}>Let's personalize your account</h1>

          <form className={styles.form_style} encType="multipart/form-data" action='/api/updateUserProfile' method='POST' id='user_form'>
            <div className={styles.pics_container}>
              <div className={styles.input_image_wrapper}>
                <div className={styles.dp_box} ref={dp_ref}>


                  <Image src={file} className={styles.pic} layout="fill" quality="100"></Image>
                  
                </div>
                <div className={styles.file_upload_btn}>
                  <label htmlFor='avatar'>upload image</label>
                  <input type="file" onChange={capture_file}
                    id="avatar" name="avatar"
                    accept="image/png, image/jpeg">
                    </input>
                </div>
                  {/* <button type='file'>upload file</button> */}
              </div>
              <div className={styles.avtr_wrapper}>
                {avtr_boxes}
                {/* <div  className={styles.avtr_box} >
                  
                </div>
                <div  className={styles.avtr_box} >
                  
                </div>
                <div  className={styles.avtr_box} >
                  
                </div>
                <div  className={styles.avtr_box} >
                  
                </div>
                <div  className={styles.avtr_box} >
                  
                </div>
                <div  className={styles.avtr_box} >
                  
                </div>
                <div  className={styles.avtr_box} >
                  
                </div>
                <div  className={styles.avtr_box} >
                  
                </div> */}
              </div>
            </div>
            <div className={styles.label_input_wrapper}>
              <label htmlFor="user_name">user name</label>
              <input className={styles.user_name_input} type='text' name="user_name" id='user_name' />

            </div>
            <br></br>
            <button className={styles.save_btn} type='submit'>save</button>
            <button className={styles.sign_out_btn}>sign out</button>
          </form>
        </div>
      </div>


    </div>
  )
  return ele;
}

export default userprofile;

export async function getServerSideProps() {
  const result = await listObj(process.env.AWS_S3_AVATAR_BUCKET_NAME)
  let avtr_names_arr = []
  if(result)
	{ avtr_names_arr = result.map(ele => {
		return {
			key: ele.Key
		}
	})}
  return {
    props: {
      avtrs: avtr_names_arr,
      host: process.env.HOST_URL
    }
  }
}